1.key值的使用
	在Vue开发过程中,在使用v-for遍历产生节点的时候,需要给每个遍历得到的节点,添加上唯一标识key属性

2.常用作key值的数据
	1.遍历过程中得到的每项身上的唯一标识,例如:id,vid等
	2.遍历过程中得到的每项的对应下标,例如index
	3.遍历过程中得到的每项,前提是:每项都必须是基础数据类型

3.key值的作用
	可以提高diff算法性能
	当响应式数据发生变化,导致页面重新渲染,才有作用
	遍历数据发生变化,此时,会通过当前数据创建出最新的虚拟DOM树,并与旧的虚拟DOM树进行对比,找到可以复用的真实DOM节点
		在此过程中,key值就是重要的对比条件

	first render:
		1.将template编译为render函数
		2.传入当前的数据,调用render函数创建出虚拟DOM树
		3.根据虚拟DOM树,生成真实DOM树
		4.将真实DOM树挂载到页面上

	update render:
		1.传入当前最新数据,调用render函数,创建出新的虚拟DOM树
		2.对比新旧虚拟DOM树,找到结构相同的虚拟DOM,复用旧的虚拟DOM的$el(真实DOM)
		3.查看没有$el属性的元素,为其创建真实DOM(无论是否复用成功,到这里一定都会有$el)
		4.将真实DOM树挂载到页面上

		注意:此处的2和3就是diff算法

4.如果使用下标作为key值,可能出现什么错误?
	1.input案例
		在该案例中,diff算法生效,成功复用了节点,但是节点复用错了
	2.商品排序
		在该案例中,diff算法失效,商品数据没有变化,只是排列顺序发生变化
		明明具有可以复用的真实DOM,但是由于key值相同数据不同,导致复用失败,最终重新生成真实DOM

5.总结
	使用唯一标识作为key值的好处就是,只要服务器的数据没有发生变化,页面上的真实DOM就能无限复用下去
	



