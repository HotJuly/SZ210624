1.props
	适用场景:父传子,子传父
	父传子:
		1.在父组件中找到子组件标签,并给子组件标签添加标签属性
		2.子组件通过配置对象的props属性,声明想要接收的标签属性值

	子传父:
		1.在父组件中找到子组件标签,并给子组件标签添加标签属性
			注意:属性值应该是个函数(这个函数必须声明在父组件的methods)
		2.子组件通过配置对象的props属性,声明想要接收的标签属性值
		3.子组件调用父组件传递的函数,并向内部传入参数


2.provide/inject
	使用场景:祖孙通信
	流程:
		1.祖先组件在配置对象中添加provide属性,属性值为对象
			在对象中传入需要传递的数据
		2.后代组件在配置对象中添加inject属性,属性值为数组
			在数组中填写需要接收的属性名称

		注意:
			1.如果同时存在多个provide暴露数据
				那么,inject会查找最近的一个provide,如果其中没有想要的数据,会继续向上查找
			2.默认情况下provide和inject的数据不是响应式数据
				如果需要变成响应式,可以配合Vue.observable实现

